// Generated by CoffeeScript 1.3.3
(function() {

  Nerd.ClueView = Backbone.View.extend({
    tagName: 'article',
    initialize: function() {
      _.bindAll(this, 'render');
      return this.template = _.template($('#clue-template').html());
    },
    render: function() {
      var rendered;
      rendered = this.template(this.model.toJSON());
      $(this.el).html(rendered);
      return this;
    }
  });

  Nerd.CluesView = Backbone.View.extend({
    tagName: 'section',
    className: 'clues',
    currentClueIndex: 0,
    initialize: function() {
      _.bindAll(this, 'render');
      this.collection.bind('reset', this.render);
      this.template = _.template($('#clues-template').html());
      this.render();
      return this.renderNextClue();
    },
    events: {
      'click .next-clue': 'renderNextClue'
    },
    render: function() {
      var $world;
      $world = $('section.world');
      $(this.el).html(this.template({}));
      return $world.append(this.el);
    },
    renderNextClue: function() {
      var $clue, clue, view;
      $clue = $('.clue');
      clue = this.collection.at(this.currentClueIndex);
      view = new Nerd.ClueView({
        model: clue
      });
      $clue.html(view.render().el);
      return this.incrementCounter();
    },
    incrementCounter: function() {
      this.currentClueIndex += 1;
      if (this.collection.length === this.currentClueIndex) {
        return $('.next-clue').remove();
      }
    }
  });

}).call(this);
