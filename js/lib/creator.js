// Generated by CoffeeScript 1.3.3
(function() {
  var addClues, addWorld, createCorrectPath, createWrongPath, getMissions, getWorlds, setFirstWorld, setQuest, shuffleQuest, _;

  _ = require('underscore');

  getMissions = function(json) {
    return _.shuffle(json);
  };

  setQuest = function(missions) {
    var quest;
    quest = missions.pop();
    quest.worlds = [];
    return quest;
  };

  getWorlds = function(missions) {
    return missions.worlds = missions.map(function(mission) {
      return mission.world;
    });
  };

  addWorld = function(quest, world) {
    return quest.worlds.push(world);
  };

  shuffleQuest = function(quest) {
    var world, _i, _len, _ref;
    quest.worlds = _.shuffle(quest.worlds);
    _ref = quest.worlds;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      world = _ref[_i];
      delete world.clues;
    }
    delete quest.shuffleQuest;
    return quest;
  };

  addClues = function(_arg) {
    var previous_world, world;
    world = _arg.world, previous_world = _arg.previous_world;
    if (previous_world) {
      return world.nextClues = _.shuffle(previous_world.clues);
    }
  };

  setFirstWorld = function(quest, previous_world) {
    var world;
    world = quest.world;
    delete quest.world;
    addClues({
      world: world,
      previous_world: previous_world
    });
    world.level = 0;
    return addWorld(quest, world);
  };

  createCorrectPath = function(_arg) {
    var levels, missions, previous_world, quest, world;
    missions = _arg.missions, quest = _arg.quest, levels = _arg.levels;
    previous_world = void 0;
    while (levels > 0) {
      world = missions.worlds.pop();
      world.level = levels;
      if (!previous_world) {
        world.final = true;
      }
      addClues({
        world: world,
        previous_world: previous_world
      });
      previous_world = world;
      addWorld(quest, world);
      levels -= 1;
    }
    return setFirstWorld(quest, previous_world);
  };

  createWrongPath = function(_arg) {
    var levels, missions, quest, times, world, _results;
    missions = _arg.missions, quest = _arg.quest, levels = _arg.levels;
    _results = [];
    while (levels > 0) {
      times = 2;
      while (times > 0) {
        world = missions.worlds.pop();
        world.level = levels;
        addWorld(quest, world);
        times -= 1;
      }
      _results.push(levels -= 1);
    }
    return _results;
  };

  exports.createQuestPath = function(_arg) {
    var levels, missions, quest;
    levels = _arg.levels, missions = _arg.missions;
    missions = getMissions(missions);
    quest = setQuest(missions);
    getWorlds(missions);
    createCorrectPath({
      missions: missions,
      quest: quest,
      levels: levels
    });
    createWrongPath({
      missions: missions,
      quest: quest,
      levels: levels
    });
    return shuffleQuest(quest);
  };

}).call(this);
