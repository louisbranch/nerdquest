// Generated by CoffeeScript 1.3.3
(function() {
  var config, mapWorlds, nano;

  config = require('../config');

  nano = require('nano')(config.db);

  exports.findUser = function(id, callback) {
    var users;
    users = nano.db.use('users');
    return users.get(id, function(err, body) {
      if (err) {
        return callback(err);
      }
    });
  };

  exports.saveUser = function(id, data, callback) {
    var users;
    users = nano.db.use('users');
    return users.insert(data, id, function(err, body) {
      if (err) {
        return console.log(err);
      } else if (typeof callback === 'function') {
        return callback(body.id);
      }
    });
  };

  mapWorlds = function(row) {
    var world;
    world = row.doc;
    delete world._id;
    delete world._rev;
    return world;
  };

  exports.getWorlds = function(callback) {
    var worlds;
    worlds = nano.db.use('worlds');
    return worlds.list({
      include_docs: true
    }, function(err, body) {
      if (err) {
        return;
      }
      worlds = body.rows.map(mapWorlds);
      return callback(worlds);
    });
  };

}).call(this);
